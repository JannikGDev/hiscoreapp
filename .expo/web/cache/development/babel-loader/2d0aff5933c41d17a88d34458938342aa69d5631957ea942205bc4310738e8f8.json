{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport React, { useState } from 'react';\nimport styles from \"../styles/defaultStyle\";\nimport Spacer from \"../shared/Spacer\";\nimport MessageBox from \"../shared/MessageBox\";\nimport { PasswordResetRequest, PasswordResetSubmit } from \"../shared/CompanionAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordResetScreen = function PasswordResetScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    mail = _useState2[0],\n    setMail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    code = _useState4[0],\n    setCode = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newPassword = _useState6[0],\n    setNewPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showMessage = _useState8[0],\n    setShowMessage = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    message = _useState10[0],\n    setMessage = _useState10[1];\n  return _jsxs(View, {\n    style: styles.pageContainer,\n    children: [_jsx(Text, {\n      style: styles.pageTitle,\n      children: \"Passwort zur\\xFCcksetzen\"\n    }), _jsx(Spacer, {\n      bottom: 24\n    }), _jsxs(SafeAreaView, {\n      style: {\n        width: '80%'\n      },\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Gib deine Mailadresse ein, um dein Passwort zur\\xFCckzusetzen.\"\n      }), _jsx(Spacer, {\n        bottom: 12\n      })]\n    }), _jsx(MessageBox, {\n      text: message,\n      show: showMessage,\n      onClose: function onClose() {\n        setShowMessage(false);\n      }\n    }), _jsx(SafeAreaView, {\n      style: {\n        width: '50%'\n      },\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: setMail,\n        value: mail,\n        placeholder: \"E-Mail Adresse\",\n        textContentType: \"emailAddress\",\n        autoCorrect: false,\n        keyboardType: \"email-address\"\n      })\n    }), _jsx(Spacer, {\n      bottom: 12\n    }), _jsx(View, {\n      style: {\n        width: '50%'\n      },\n      children: _jsx(Button, {\n        title: \"Absenden\",\n        color: styles.button.color,\n        onPress: _asyncToGenerator(function* () {\n          if (mail.length == 0) {\n            setMessage(\"Bitte geben Sie eine E-Mail-Adresse ein.\");\n            setShowMessage(true);\n            return;\n          }\n          var result = yield PasswordResetRequest(mail);\n          if (result.statusCode == 200) {\n            setMessage(\"Eine E-Mail mit dem Code wurde verschickt.\");\n            setShowMessage(true);\n          } else {\n            setMessage(\"Es wurde kein Nutzer mit dieser E-Mail gefunden.\");\n            setShowMessage(true);\n          }\n        })\n      })\n    }), _jsx(Spacer, {\n      bottom: 32\n    }), _jsx(Text, {\n      style: [styles.text, {\n        width: '80%',\n        textAlign: 'center'\n      }],\n      children: \"Gib den Code aus der e-Mail ein und w\\xE4hle ein neues Passwort\"\n    }), _jsx(Spacer, {\n      bottom: 32\n    }), _jsxs(SafeAreaView, {\n      style: {\n        width: '50%'\n      },\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: setCode,\n        value: code,\n        placeholder: \"Code\",\n        textContentType: \"none\",\n        autoCorrect: false\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: setNewPassword,\n        value: newPassword,\n        placeholder: \"Neues Passwort\",\n        textContentType: \"newPassword\",\n        autoCorrect: false,\n        secureTextEntry: true\n      })]\n    }), _jsx(Spacer, {\n      bottom: 12\n    }), _jsx(View, {\n      style: {\n        width: '50%'\n      },\n      children: _jsx(Button, {\n        title: \"Passwort \\xE4ndern\",\n        color: styles.button.color,\n        onPress: _asyncToGenerator(function* () {\n          if (code.length == 0 || newPassword.length < 8) {\n            setMessage(\"Bitte geben Sie den Code aus der E-Mail und ein Passwort mit mindestens 8 Zeichen ein.\");\n            setShowMessage(true);\n            return;\n          }\n          var result = yield PasswordResetSubmit(code, newPassword);\n          if (result.statusCode == 401) {\n            setMessage(\"Der angegebene Code ist nicht gültig.\");\n            setShowMessage(true);\n            return;\n          } else if (result.statusCode == 400) {\n            setMessage(\"Das Passwort muss mindestens 8 Zeichen haben.\");\n            setShowMessage(true);\n            return;\n          } else if (result.statusCode == 404) {\n            setMessage(\"Der User mit diesem Code ist nicht mehr vorhanden.\");\n            setShowMessage(true);\n            return;\n          } else if (result.statusCode == 200) {\n            setMessage(\"Das Passwort wurde geändert.\");\n            setShowMessage(true);\n            return;\n          }\n        })\n      })\n    })]\n  });\n};\nexport default PasswordResetScreen;","map":{"version":3,"names":["React","useState","styles","Spacer","MessageBox","PasswordResetRequest","PasswordResetSubmit","jsx","_jsx","jsxs","_jsxs","PasswordResetScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","mail","setMail","_useState3","_useState4","code","setCode","_useState5","_useState6","newPassword","setNewPassword","_useState7","_useState8","showMessage","setShowMessage","_useState9","_useState10","message","setMessage","View","style","pageContainer","children","Text","pageTitle","bottom","SafeAreaView","width","text","show","onClose","TextInput","textInput","onChangeText","value","placeholder","textContentType","autoCorrect","keyboardType","Button","title","color","button","onPress","_asyncToGenerator","length","result","statusCode","textAlign","secureTextEntry"],"sources":["C:/Workspace/Programming/Mobile/hiscoreapp/HI-SCORE/screens/PasswordResetScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, Image, Button, TextInput, SafeAreaView } from 'react-native';\r\nimport React, {useState} from 'react';\r\nimport styles from '../styles/defaultStyle';\r\nimport Spacer from '../shared/Spacer'\r\nimport MessageBox from '../shared/MessageBox'\r\nimport { PasswordResetRequest, PasswordResetSubmit } from '../shared/CompanionAPI'\r\n\r\n\r\n\r\nconst PasswordResetScreen = ({navigation, route}) => {\r\n\r\n    const [mail, setMail] = useState(\"\");\r\n    const [code, setCode] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    return (\r\n        <View style={styles.pageContainer}> \r\n\r\n        <Text style={styles.pageTitle}>Passwort zurücksetzen</Text>\r\n\r\n        <Spacer bottom={24} />\r\n        <SafeAreaView style = {{width: '80%'}}>\r\n        <Text style={styles.text}>\r\n            Gib deine Mailadresse ein, um dein Passwort zurückzusetzen.\r\n            </Text>\r\n        <Spacer bottom={12} />\r\n        </SafeAreaView>\r\n        <MessageBox \r\n            text={message}\r\n            show={showMessage}\r\n            onClose={() => {\r\n                setShowMessage(false);\r\n            }}\r\n        />\r\n\r\n        <SafeAreaView style = {{width: '50%'}}>\r\n            <TextInput\r\n                style={styles.textInput}\r\n                onChangeText={setMail}\r\n                value={mail}\r\n                placeholder=\"E-Mail Adresse\"\r\n                textContentType='emailAddress'\r\n                autoCorrect={false}\r\n                keyboardType='email-address'\r\n            />\r\n        </SafeAreaView>\r\n\r\n        <Spacer bottom={12} />\r\n\r\n        <View style = {{width: '50%'}}>\r\n            <Button\r\n            title=\"Absenden\"\r\n            color={styles.button.color}\r\n            onPress={ async () =>\r\n            {\r\n                if(mail.length == 0) {\r\n                    setMessage(\"Bitte geben Sie eine E-Mail-Adresse ein.\");\r\n                    setShowMessage(true);\r\n                    return;\r\n                }\r\n                let result = await PasswordResetRequest(mail);\r\n                if(result.statusCode == 200) {\r\n                    setMessage(\"Eine E-Mail mit dem Code wurde verschickt.\");\r\n                    setShowMessage(true);\r\n                }\r\n                else {\r\n                    setMessage(\"Es wurde kein Nutzer mit dieser E-Mail gefunden.\");\r\n                    setShowMessage(true);\r\n                }\r\n            }}\r\n            />\r\n        </View>\r\n\r\n        <Spacer bottom={32} />\r\n        \r\n        <Text style={[styles.text,{width: '80%', textAlign: 'center'}]}>\r\n            Gib den Code aus der e-Mail ein und wähle ein neues Passwort\r\n        </Text>\r\n\r\n\r\n        <Spacer bottom={32} />\r\n        <SafeAreaView style = {{width: '50%'}}>\r\n        <TextInput\r\n                style={styles.textInput}\r\n                onChangeText={setCode}\r\n                value={code}\r\n                placeholder=\"Code\"\r\n                textContentType='none'\r\n                autoCorrect={false}\r\n            />\r\n             \r\n\r\n        <TextInput\r\n                style={styles.textInput}\r\n                onChangeText={setNewPassword}\r\n                value={newPassword}\r\n                placeholder=\"Neues Passwort\"\r\n                textContentType='newPassword'\r\n                autoCorrect={false}\r\n                secureTextEntry={true}\r\n            />\r\n        </SafeAreaView>\r\n\r\n        <Spacer bottom={12} />\r\n\r\n        <View style = {{width: '50%'}}>\r\n            <Button\r\n            title=\"Passwort ändern\"\r\n            color={styles.button.color}\r\n            onPress={ async () =>\r\n            {\r\n\r\n                if(code.length == 0 || newPassword.length < 8) {\r\n                    setMessage(\"Bitte geben Sie den Code aus der E-Mail und ein Passwort mit mindestens 8 Zeichen ein.\");\r\n                    setShowMessage(true);\r\n                    return;\r\n                }\r\n\r\n                let result = await PasswordResetSubmit(code, newPassword);\r\n\r\n                if(result.statusCode == 401) {\r\n                    setMessage(\"Der angegebene Code ist nicht gültig.\");\r\n                    setShowMessage(true);\r\n                    return;\r\n                }\r\n                else if(result.statusCode == 400) {\r\n                    setMessage(\"Das Passwort muss mindestens 8 Zeichen haben.\");\r\n                    setShowMessage(true);\r\n                    return;\r\n                }\r\n                else if(result.statusCode == 404) {\r\n                    setMessage(\"Der User mit diesem Code ist nicht mehr vorhanden.\");\r\n                    setShowMessage(true);\r\n                    return;\r\n                }\r\n                else if(result.statusCode == 200) {\r\n                    setMessage(\"Das Passwort wurde geändert.\");\r\n                    setShowMessage(true);\r\n                    return;\r\n                }\r\n                \r\n            }}\r\n            />\r\n        </View>\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default PasswordResetScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}