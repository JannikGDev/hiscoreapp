{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"../styles/defaultStyle\";\nimport Spacer from \"../shared/Spacer\";\nimport { GetQuests } from \"../shared/CompanionAPI.js\";\nimport { GetQuestRewardMultiplier, GetQuestRewardExp, GetRepetitionString } from \"../shared/Utility.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar QuestListScreen = function QuestListScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    initiated = _useState2[0],\n    setInitiated = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    questItems = _useState4[0],\n    setQuestItems = _useState4[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var result = yield GetQuests();\n        if (!result.success) {\n          return;\n        }\n        var questList = result.response;\n        setQuestItems(questList);\n        setInitiated(true);\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData().catch(console.error);\n  }, []);\n  if (initiated === false) {\n    return _jsx(View, {\n      style: styles.pageContainer\n    });\n  } else {\n    return _jsx(View, {\n      style: [styles.listContainer, {\n        paddingTop: 32\n      }],\n      children: _jsxs(SafeAreaView, {\n        style: [styles.listContainer],\n        children: [_jsx(Text, {\n          style: styles.pageTitle,\n          children: \"Quests\"\n        }), _jsx(FlatList, {\n          data: questItems,\n          renderItem: function renderItem(entry) {\n            return _jsx(QuestListItem, {\n              entry: entry\n            });\n          },\n          keyExtractor: function keyExtractor(quest) {\n            return quest.id;\n          }\n        })]\n      })\n    });\n  }\n};\nexport var QuestListItem = function QuestListItem(_ref3) {\n  var entry = _ref3.entry;\n  var quest = entry.item;\n  return _jsx(View, {\n    style: [styles.listItem, {\n      flexDirection: 'column'\n    }, quest.done ? styles.questItemDone : styles.questItemOpen],\n    children: _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        flex: 2\n      },\n      children: [_jsx(Image, {\n        style: [styles.inlineIcon, {\n          width: 32,\n          height: 'auto',\n          flex: 0.5,\n          marginRight: 16\n        }],\n        source: quest.done ? require(\"../assets/quest-completed.png\") : require(\"../assets/quest-open.png\")\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'column',\n          flex: 2\n        },\n        children: [_jsx(Text, {\n          style: [styles.text, styles.textBold, {\n            flex: 1\n          }],\n          children: quest.name\n        }), _jsx(Text, {\n          style: [styles.text, styles.textItalic, {\n            flex: 1\n          }],\n          children: GetRepetitionString(quest.repetition)\n        }), _jsxs(Text, {\n          style: [styles.text, {\n            flex: 1\n          }],\n          children: [GetQuestRewardExp(quest), GetQuestRewardMultiplier(quest)]\n        }), _jsxs(Text, {\n          style: [styles.text, {\n            flex: 0.5\n          }],\n          children: [\" \", quest.done ? \"Erledigt!\" : \"Offen\", \" \"]\n        })]\n      })]\n    })\n  });\n};\nexport default QuestListScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Image","Button","FlatList","StatusBar","SafeAreaView","styles","Spacer","GetQuests","GetQuestRewardMultiplier","GetQuestRewardExp","GetRepetitionString","jsx","_jsx","jsxs","_jsxs","QuestListScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","initiated","setInitiated","_useState3","_useState4","questItems","setQuestItems","fetchData","_ref2","_asyncToGenerator","result","success","questList","response","apply","arguments","catch","console","error","style","pageContainer","listContainer","paddingTop","children","pageTitle","data","renderItem","entry","QuestListItem","keyExtractor","quest","id","_ref3","item","listItem","flexDirection","done","questItemDone","questItemOpen","flex","inlineIcon","width","height","marginRight","source","require","text","textBold","name","textItalic","repetition"],"sources":["C:/Workspace/Programming/Mobile/hiscoreapp/HI-SCORE/screens/QuestListScreen.js"],"sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, Button, FlatList, StatusBar, SafeAreaView } from 'react-native';\r\nimport styles from '../styles/defaultStyle';\r\nimport Spacer from '../shared/Spacer'\r\nimport {GetQuests} from '../shared/CompanionAPI.js'\r\nimport {GetQuestRewardMultiplier, GetQuestRewardExp, GetRepetitionString} from '../shared/Utility.js'\r\n\r\nconst QuestListScreen = ({navigation, route}) => {\r\n    const [initiated, setInitiated] = useState(false);\r\n    const [questItems, setQuestItems] = useState([]);\r\n\r\n    useEffect( () => {\r\n        // declare the data fetching function\r\n        const fetchData = async () => {\r\n            let result = await GetQuests();\r\n            if(!result.success) {\r\n                //console.log(result);\r\n                return;\r\n            }\r\n                \r\n            let questList = result.response;\r\n            setQuestItems(questList);\r\n            setInitiated(true);\r\n        }\r\n\r\n        fetchData()\r\n        .catch(console.error);\r\n    }, []);\r\n\r\n    if(initiated === false) {\r\n        return (<View style={styles.pageContainer}></View>)\r\n    }\r\n    else{\r\n    return (\r\n        <View style={[styles.listContainer,{paddingTop: 32}]}>\r\n        <SafeAreaView style={[styles.listContainer]}>\r\n        <Text style={styles.pageTitle}>Quests</Text>\r\n            <FlatList\r\n                data={questItems}\r\n                renderItem={(entry) => <QuestListItem entry={entry} />}\r\n                keyExtractor={quest => quest.id}\r\n            />\r\n        </SafeAreaView>\r\n        </View>\r\n        )\r\n    }\r\n};\r\n\r\nexport const QuestListItem = ({entry}) => \r\n{\r\n    let quest = entry.item;\r\n\r\n    return  (\r\n        <View style={[styles.listItem, {flexDirection: 'column'}, quest.done ? styles.questItemDone : styles.questItemOpen]}>\r\n            \r\n\r\n            <View style={{flexDirection: 'row', flex: 2}}>\r\n                <Image\r\n                style={[styles.inlineIcon,{ width: 32, height: 'auto', flex: 0.5, marginRight: 16}]} \r\n                source={quest.done ? require('../assets/quest-completed.png') : require('../assets/quest-open.png')}\r\n                />\r\n                <View style={{flexDirection: 'column', flex: 2}}>\r\n                    <Text style={[styles.text, styles.textBold, {flex: 1}]}>{quest.name}</Text>\r\n                    <Text style={[styles.text, styles.textItalic, {flex: 1}]}>{GetRepetitionString(quest.repetition)}</Text>\r\n                    <Text style={[styles.text, {flex: 1}]}>{GetQuestRewardExp(quest)}{GetQuestRewardMultiplier(quest)}</Text>\r\n                    <Text style={[styles.text, {flex: 0.5}]}> {quest.done ? \"Erledigt!\" : \"Offen\"} </Text>\r\n                </View>\r\n             </View>\r\n        </View>\r\n      );\r\n}\r\n\r\n\r\n  export default QuestListScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}