{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"../styles/defaultStyle\";\nimport Spacer from \"../shared/Spacer\";\nimport { GetQuests, GenerateQRCode } from \"../shared/CompanionAPI.js\";\nimport { GetQuestRewardMultiplier, GetQuestRewardExp, GetRepetitionString } from \"../shared/Utility.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar QRCodeGeneratorScreen = function QRCodeGeneratorScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    initiated = _useState2[0],\n    setInitiated = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    questItems = _useState4[0],\n    setQuestItems = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image = _useState6[0],\n    setImage = _useState6[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var result = yield GetQuests();\n        if (!result.success) {\n          return;\n        }\n        var questList = result.response;\n        setQuestItems(questList);\n        setInitiated(true);\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData().catch(console.error);\n  }, []);\n  if (initiated === false) {\n    return _jsx(View, {\n      style: styles.pageContainer\n    });\n  } else if (image.length > 0) return _jsxs(View, {\n    style: styles.pageContainer,\n    children: [_jsx(Image, {\n      style: {\n        width: 300,\n        height: 300,\n        resizeMode: 'contain',\n        flex: 1\n      },\n      source: {\n        uri: image\n      }\n    }), _jsx(Button, {\n      title: \"Back\",\n      color: styles.button.color,\n      onPress: function onPress() {\n        return setImage(\"\");\n      }\n    })]\n  });else {\n    return _jsx(View, {\n      style: [styles.listContainer, {\n        paddingTop: 32\n      }],\n      children: _jsxs(SafeAreaView, {\n        style: [styles.listContainer],\n        children: [_jsx(Text, {\n          style: styles.pageTitle,\n          children: \"Generate QR Code\"\n        }), _jsx(FlatList, {\n          data: questItems,\n          renderItem: function renderItem(entry) {\n            return _jsx(QuestListItem, {\n              entry: entry,\n              setImage: setImage\n            });\n          },\n          keyExtractor: function keyExtractor(quest) {\n            return quest.id;\n          }\n        })]\n      })\n    });\n  }\n};\nexport var QuestListItem = function QuestListItem(_ref3) {\n  var entry = _ref3.entry,\n    setImage = _ref3.setImage;\n  var quest = entry.item;\n  return _jsx(Pressable, {\n    onPress: _asyncToGenerator(function* () {\n      var result = yield GenerateQRCode(quest.id);\n      setImage(result.image);\n    }),\n    children: _jsx(View, {\n      style: [styles.listItem, {\n        flexDirection: 'column'\n      }, quest.done ? styles.questItemDone : styles.questItemOpen],\n      children: _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          flex: 2\n        },\n        children: [_jsx(Image, {\n          style: [styles.inlineIcon, {\n            width: 32,\n            height: 'auto',\n            flex: 0.5,\n            marginRight: 16\n          }],\n          source: quest.done ? require(\"../assets/quest-completed.png\") : require(\"../assets/quest-open.png\")\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'column',\n            flex: 2\n          },\n          children: [_jsx(Text, {\n            style: [styles.text, styles.textBold, {\n              flex: 1\n            }],\n            children: quest.name\n          }), _jsx(Text, {\n            style: [styles.text, styles.textItalic, {\n              flex: 1\n            }],\n            children: GetRepetitionString(quest.repetition)\n          }), _jsxs(Text, {\n            style: [styles.text, {\n              flex: 1\n            }],\n            children: [GetQuestRewardExp(quest), GetQuestRewardMultiplier(quest)]\n          }), _jsxs(Text, {\n            style: [styles.text, {\n              flex: 0.5\n            }],\n            children: [\" \", quest.done ? \"Erledigt!\" : \"Offen\", \" \"]\n          })]\n        })]\n      })\n    })\n  });\n};\nexport default QRCodeGeneratorScreen;","map":{"version":3,"names":["React","useState","useEffect","Pressable","StyleSheet","Text","View","Image","Button","FlatList","StatusBar","SafeAreaView","styles","Spacer","GetQuests","GenerateQRCode","GetQuestRewardMultiplier","GetQuestRewardExp","GetRepetitionString","jsx","_jsx","jsxs","_jsxs","QRCodeGeneratorScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","initiated","setInitiated","_useState3","_useState4","questItems","setQuestItems","_useState5","_useState6","image","setImage","fetchData","_ref2","_asyncToGenerator","result","success","questList","response","apply","arguments","catch","console","error","style","pageContainer","length","children","width","height","resizeMode","flex","source","uri","title","color","button","onPress","listContainer","paddingTop","pageTitle","data","renderItem","entry","QuestListItem","keyExtractor","quest","id","_ref3","item","listItem","flexDirection","done","questItemDone","questItemOpen","inlineIcon","marginRight","require","text","textBold","name","textItalic","repetition"],"sources":["C:/Workspace/Programming/Mobile/hiscoreapp/HI-SCORE/screens/QRCodeGenerator.js"],"sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport {Pressable, StyleSheet, Text, View, Image, Button, FlatList, StatusBar, SafeAreaView } from 'react-native';\r\nimport styles from '../styles/defaultStyle';\r\nimport Spacer from '../shared/Spacer'\r\nimport {GetQuests, GenerateQRCode} from '../shared/CompanionAPI.js'\r\nimport {GetQuestRewardMultiplier, GetQuestRewardExp, GetRepetitionString} from '../shared/Utility.js'\r\n\r\n\r\n\r\n\r\nconst QRCodeGeneratorScreen = ({navigation, route}) => {\r\n\r\n    const [initiated, setInitiated] = useState(false);\r\n    const [questItems, setQuestItems] = useState([]);\r\n\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    useEffect( () => {\r\n        // declare the data fetching function\r\n        const fetchData = async () => {\r\n            let result = await GetQuests();\r\n            if(!result.success) {\r\n                //console.log(result);\r\n                return;\r\n            }\r\n                \r\n            let questList = result.response;\r\n            setQuestItems(questList);\r\n            setInitiated(true);\r\n        }\r\n\r\n        fetchData()\r\n        .catch(console.error);\r\n    }, []);\r\n\r\n    if(initiated === false) {\r\n        return (<View style={styles.pageContainer}></View>)\r\n    }\r\n    else if(image.length > 0)\r\n        return (<View style={styles.pageContainer}>\r\n            <Image\r\n            style={{\r\n                width: 300,\r\n                height: 300,\r\n                resizeMode: 'contain',\r\n                flex: 1,\r\n            }}\r\n            source={{\r\n                uri: image,\r\n            }}\r\n            />\r\n              <Button\r\n            title=\"Back\"\r\n            color={styles.button.color}\r\n            onPress={() =>setImage(\"\")}\r\n            />\r\n        </View>)\r\n    else\r\n    {\r\n    return (\r\n        <View style={[styles.listContainer,{paddingTop: 32}]}>\r\n        <SafeAreaView style={[styles.listContainer]}>\r\n        <Text style={styles.pageTitle}>Generate QR Code</Text>\r\n            <FlatList\r\n                data={questItems}\r\n                renderItem={(entry) => <QuestListItem entry={entry} setImage={setImage} />}\r\n                keyExtractor={quest => quest.id}\r\n            />\r\n        </SafeAreaView>\r\n        </View>\r\n        )\r\n    }\r\n};\r\n\r\nexport const QuestListItem = ({entry, setImage}) => \r\n{\r\n    let quest = entry.item;\r\n\r\n    return  (\r\n    <Pressable onPress={async () => {\r\n        \r\n        let result = await GenerateQRCode(quest.id);\r\n        setImage(result.image);\r\n\r\n      }}>\r\n        <View style={[styles.listItem, {flexDirection: 'column'}, quest.done ? styles.questItemDone : styles.questItemOpen]}>\r\n        \r\n            <View style={{flexDirection: 'row', flex: 2}}>\r\n                <Image\r\n                style={[styles.inlineIcon,{ width: 32, height: 'auto', flex: 0.5, marginRight: 16}]} \r\n                source={quest.done ? require('../assets/quest-completed.png') : require('../assets/quest-open.png')}\r\n                />\r\n            <View style={{flexDirection: 'column', flex: 2}}>\r\n                <Text style={[styles.text, styles.textBold, {flex: 1}]}>{quest.name}</Text>\r\n                <Text style={[styles.text, styles.textItalic, {flex: 1}]}>{GetRepetitionString(quest.repetition)}</Text>\r\n                <Text style={[styles.text, {flex: 1}]}>{GetQuestRewardExp(quest)}{GetQuestRewardMultiplier(quest)}</Text>\r\n                <Text style={[styles.text, {flex: 0.5}]}> {quest.done ? \"Erledigt!\" : \"Offen\"} </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        </Pressable>\r\n      );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default QRCodeGeneratorScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,YAAA;AAElD,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,SAAQC,SAAS,EAAEC,cAAc;AACjC,SAAQC,wBAAwB,EAAEC,iBAAiB,EAAEC,mBAAmB;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKrG,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAA4B;EAAA,IAAvBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAE7C,IAAAC,SAAA,GAAkC1B,QAAQ,CAAC,KAAK,CAAC;IAAA2B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAoC/B,QAAQ,CAAC,EAAE,CAAC;IAAAgC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAAG,UAAA,GAA0BnC,QAAQ,CAAC,EAAE,CAAC;IAAAoC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBnC,SAAS,CAAE,YAAM;IAEb,IAAMsC,SAAS;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC1B,IAAIC,MAAM,SAAS7B,SAAS,CAAC,CAAC;QAC9B,IAAG,CAAC6B,MAAM,CAACC,OAAO,EAAE;UAEhB;QACJ;QAEA,IAAIC,SAAS,GAAGF,MAAM,CAACG,QAAQ;QAC/BX,aAAa,CAACU,SAAS,CAAC;QACxBd,YAAY,CAAC,IAAI,CAAC;MACtB,CAAC;MAAA,gBAVKS,SAASA,CAAA;QAAA,OAAAC,KAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAUd;IAEDR,SAAS,CAAC,CAAC,CACVS,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGrB,SAAS,KAAK,KAAK,EAAE;IACpB,OAAQV,IAAA,CAACd,IAAI;MAAC8C,KAAK,EAAExC,MAAM,CAACyC;IAAc,CAAO,CAAC;EACtD,CAAC,MACI,IAAGf,KAAK,CAACgB,MAAM,GAAG,CAAC,EACpB,OAAQhC,KAAA,CAAChB,IAAI;IAAC8C,KAAK,EAAExC,MAAM,CAACyC,aAAc;IAAAE,QAAA,GACtCnC,IAAA,CAACb,KAAK;MACN6C,KAAK,EAAE;QACHI,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,GAAG;QACXC,UAAU,EAAE,SAAS;QACrBC,IAAI,EAAE;MACV,CAAE;MACFC,MAAM,EAAE;QACJC,GAAG,EAAEvB;MACT;IAAE,CACD,CAAC,EACAlB,IAAA,CAACZ,MAAM;MACTsD,KAAK,EAAC,MAAM;MACZC,KAAK,EAAEnD,MAAM,CAACoD,MAAM,CAACD,KAAM;MAC3BE,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAK1B,QAAQ,CAAC,EAAE,CAAC;MAAA;IAAC,CAC1B,CAAC;EAAA,CACA,CAAC,CAAC,KAEZ;IACA,OACInB,IAAA,CAACd,IAAI;MAAC8C,KAAK,EAAE,CAACxC,MAAM,CAACsD,aAAa,EAAC;QAACC,UAAU,EAAE;MAAE,CAAC,CAAE;MAAAZ,QAAA,EACrDjC,KAAA,CAACX,YAAY;QAACyC,KAAK,EAAE,CAACxC,MAAM,CAACsD,aAAa,CAAE;QAAAX,QAAA,GAC5CnC,IAAA,CAACf,IAAI;UAAC+C,KAAK,EAAExC,MAAM,CAACwD,SAAU;UAAAb,QAAA,EAAC;QAAgB,CAAM,CAAC,EAClDnC,IAAA,CAACX,QAAQ;UACL4D,IAAI,EAAEnC,UAAW;UACjBoC,UAAU,EAAE,SAAAA,WAACC,KAAK;YAAA,OAAKnD,IAAA,CAACoD,aAAa;cAACD,KAAK,EAAEA,KAAM;cAAChC,QAAQ,EAAEA;YAAS,CAAE,CAAC;UAAA,CAAC;UAC3EkC,YAAY,EAAE,SAAAA,aAAAC,KAAK;YAAA,OAAIA,KAAK,CAACC,EAAE;UAAA;QAAC,CACnC,CAAC;MAAA,CACQ;IAAC,CACT,CAAC;EAEX;AACJ,CAAC;AAED,OAAO,IAAMH,aAAa,GAAG,SAAhBA,aAAaA,CAAAI,KAAA,EAC1B;EAAA,IAD+BL,KAAK,GAAAK,KAAA,CAALL,KAAK;IAAEhC,QAAQ,GAAAqC,KAAA,CAARrC,QAAQ;EAE1C,IAAImC,KAAK,GAAGH,KAAK,CAACM,IAAI;EAEtB,OACAzD,IAAA,CAACjB,SAAS;IAAC8D,OAAO,EAAAvB,iBAAA,CAAE,aAAY;MAE5B,IAAIC,MAAM,SAAS5B,cAAc,CAAC2D,KAAK,CAACC,EAAE,CAAC;MAC3CpC,QAAQ,CAACI,MAAM,CAACL,KAAK,CAAC;IAExB,CAAC,CAAC;IAAAiB,QAAA,EACAnC,IAAA,CAACd,IAAI;MAAC8C,KAAK,EAAE,CAACxC,MAAM,CAACkE,QAAQ,EAAE;QAACC,aAAa,EAAE;MAAQ,CAAC,EAAEL,KAAK,CAACM,IAAI,GAAGpE,MAAM,CAACqE,aAAa,GAAGrE,MAAM,CAACsE,aAAa,CAAE;MAAA3B,QAAA,EAEhHjC,KAAA,CAAChB,IAAI;QAAC8C,KAAK,EAAE;UAAC2B,aAAa,EAAE,KAAK;UAAEpB,IAAI,EAAE;QAAC,CAAE;QAAAJ,QAAA,GACzCnC,IAAA,CAACb,KAAK;UACN6C,KAAK,EAAE,CAACxC,MAAM,CAACuE,UAAU,EAAC;YAAE3B,KAAK,EAAE,EAAE;YAAEC,MAAM,EAAE,MAAM;YAAEE,IAAI,EAAE,GAAG;YAAEyB,WAAW,EAAE;UAAE,CAAC,CAAE;UACpFxB,MAAM,EAAEc,KAAK,CAACM,IAAI,GAAGK,OAAO,gCAAgC,CAAC,GAAGA,OAAO,2BAA2B;QAAE,CACnG,CAAC,EACN/D,KAAA,CAAChB,IAAI;UAAC8C,KAAK,EAAE;YAAC2B,aAAa,EAAE,QAAQ;YAAEpB,IAAI,EAAE;UAAC,CAAE;UAAAJ,QAAA,GAC5CnC,IAAA,CAACf,IAAI;YAAC+C,KAAK,EAAE,CAACxC,MAAM,CAAC0E,IAAI,EAAE1E,MAAM,CAAC2E,QAAQ,EAAE;cAAC5B,IAAI,EAAE;YAAC,CAAC,CAAE;YAAAJ,QAAA,EAAEmB,KAAK,CAACc;UAAI,CAAO,CAAC,EAC3EpE,IAAA,CAACf,IAAI;YAAC+C,KAAK,EAAE,CAACxC,MAAM,CAAC0E,IAAI,EAAE1E,MAAM,CAAC6E,UAAU,EAAE;cAAC9B,IAAI,EAAE;YAAC,CAAC,CAAE;YAAAJ,QAAA,EAAErC,mBAAmB,CAACwD,KAAK,CAACgB,UAAU;UAAC,CAAO,CAAC,EACxGpE,KAAA,CAACjB,IAAI;YAAC+C,KAAK,EAAE,CAACxC,MAAM,CAAC0E,IAAI,EAAE;cAAC3B,IAAI,EAAE;YAAC,CAAC,CAAE;YAAAJ,QAAA,GAAEtC,iBAAiB,CAACyD,KAAK,CAAC,EAAE1D,wBAAwB,CAAC0D,KAAK,CAAC;UAAA,CAAO,CAAC,EACzGpD,KAAA,CAACjB,IAAI;YAAC+C,KAAK,EAAE,CAACxC,MAAM,CAAC0E,IAAI,EAAE;cAAC3B,IAAI,EAAE;YAAG,CAAC,CAAE;YAAAJ,QAAA,GAAC,GAAC,EAACmB,KAAK,CAACM,IAAI,GAAG,WAAW,GAAG,OAAO,EAAC,GAAC;UAAA,CAAM,CAAC;QAAA,CACpF,CAAC;MAAA,CACH;IAAC,CACH;EAAC,CACI,CAAC;AAEpB,CAAC;AAcD,eAAezD,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}