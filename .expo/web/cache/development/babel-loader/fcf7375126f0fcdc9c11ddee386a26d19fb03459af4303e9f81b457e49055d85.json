{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { SetLoggedIn, GetJWTKey } from \"./GlobalStorage.js\";\nvar API_BASE_URL = 'https://continue.sodacookie.net';\nvar SendRequest = function () {\n  var _ref = _asyncToGenerator(function* (url, method, headers, body) {\n    var onSuccessMessage = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"Action successful\";\n    var response = yield fetch(url, {\n      method: method,\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        'Accept': 'application/json'\n      }),\n      body: body\n    }).catch(function (error) {\n      console.error(error);\n      return {\n        message: error,\n        success: false,\n        statusCode: 400\n      };\n    });\n    var statusCode = response.status;\n    if (statusCode == 502 || statusCode == 503 || statusCode == 404) {\n      console.error(\"UNABLE TO CONNECT TO API\");\n      return {\n        message: \"Could not connect to companion API Server\",\n        success: false,\n        statusCode: statusCode\n      };\n    }\n    if (statusCode == 401) {\n      return {\n        message: \"Invalid authorization\",\n        success: false,\n        statusCode: statusCode\n      };\n    }\n    if (!response.ok) {\n      var error = yield response.json();\n      return {\n        message: error,\n        success: false,\n        statusCode: statusCode\n      };\n    }\n    var responseBody = yield response.json();\n    var result = {\n      success: true,\n      message: onSuccessMessage,\n      response: responseBody,\n      statusCode: statusCode\n    };\n    return result;\n  });\n  return function SendRequest(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var Register = function () {\n  var _ref2 = _asyncToGenerator(function* (userName, password, mail) {\n    var request_url = API_BASE_URL + '/Login/register';\n    var data = JSON.stringify({\n      username: userName,\n      password: password,\n      mail: mail\n    });\n    var result = yield SendRequest(request_url, 'POST', {\n      'Content-Type': 'application/json'\n    }, data, \"Account was registered!\");\n    return result;\n  });\n  return function Register(_x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var Login = function () {\n  var _ref3 = _asyncToGenerator(function* (userName, password) {\n    var request_url = API_BASE_URL + '/Login/login';\n    var data = JSON.stringify({\n      username: userName,\n      password: password\n    });\n    var result = yield SendRequest(request_url, 'POST', {\n      'Content-Type': 'application/json'\n    }, data, \"\");\n    if (result.success) yield SetLoggedIn(result.response);\n    return result;\n  });\n  return function Login(_x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var PasswordResetRequest = function () {\n  var _ref4 = _asyncToGenerator(function* (mail) {\n    var request_url = API_BASE_URL + '/PasswordReset/request';\n    var data = JSON.stringify({\n      Mail: mail\n    });\n    var result = yield SendRequest(request_url, 'POST', {\n      'Content-Type': 'application/json'\n    }, data, \"Password reset mail sent.\");\n    return result;\n  });\n  return function PasswordResetRequest(_x10) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var PasswordResetSubmit = function () {\n  var _ref5 = _asyncToGenerator(function* (code, newPassword) {\n    var request_url = API_BASE_URL + '/PasswordReset/submit';\n    var data = JSON.stringify({\n      Code: code,\n      NewPassword: newPassword\n    });\n    var result = yield SendRequest(request_url, 'POST', {\n      'Content-Type': 'application/json'\n    }, data, \"Password was changed.\");\n    return result;\n  });\n  return function PasswordResetSubmit(_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var GetUserData = function () {\n  var _ref6 = _asyncToGenerator(function* () {\n    var request_url = API_BASE_URL + '/User';\n    var key = yield GetJWTKey();\n    if (key == null || key.length == 0) return {\n      success: false,\n      message: \"Not logged in!\"\n    };\n    var headers = {\n      'Authorization': 'Bearer ' + key\n    };\n    var result = yield SendRequest(request_url, 'GET', headers, null);\n    return result;\n  });\n  return function GetUserData() {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var ScanCode = function () {\n  var _ref7 = _asyncToGenerator(function* (code) {\n    var request_url = API_BASE_URL + '/Quest';\n    var data = JSON.stringify({\n      code: code\n    });\n    var key = yield GetJWTKey();\n    if (key == null || key.length == 0) return {\n      success: false,\n      message: \"Not logged in!\"\n    };\n    var headers = {\n      'Authorization': 'Bearer ' + key\n    };\n    var result = yield SendRequest(request_url, 'POST', _objectSpread(_objectSpread({}, headers), {}, {\n      'Content-Type': 'application/json'\n    }), data, \"Quest completed!\");\n    return result;\n  });\n  return function ScanCode(_x13) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var GetQuests = function () {\n  var _ref8 = _asyncToGenerator(function* () {\n    var request_url = API_BASE_URL + '/Quest/questlist';\n    var key = yield GetJWTKey();\n    if (key == null || key.length == 0) return {\n      success: false,\n      message: \"Not logged in!\"\n    };\n    var headers = {\n      'Authorization': 'Bearer ' + key\n    };\n    var result = yield SendRequest(request_url, 'GET', headers, null);\n    return result;\n  });\n  return function GetQuests() {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var GenerateQRCode = function () {\n  var _ref9 = _asyncToGenerator(function* (questId) {\n    var request_url = API_BASE_URL + '/Quest/qrcode?id=' + questId;\n    var key = yield GetJWTKey();\n    if (key == null || key.length == 0) return {\n      success: false,\n      message: \"Not logged in!\"\n    };\n    var headers = {\n      'Authorization': 'Bearer ' + key\n    };\n    var response = yield fetch(request_url, {\n      method: \"GET\",\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        'Accept': 'image/png'\n      }),\n      body: null\n    }).catch(function (error) {\n      console.error(error);\n      return {\n        message: error,\n        success: false\n      };\n    });\n    var blob = yield response.blob();\n    var base64 = yield blobToBase64(blob);\n    return {\n      message: 'QR Code generated successfully',\n      success: true,\n      image: base64\n    };\n  });\n  return function GenerateQRCode(_x14) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nfunction blobToBase64(_x15) {\n  return _blobToBase.apply(this, arguments);\n}\nfunction _blobToBase() {\n  _blobToBase = _asyncToGenerator(function* (blob) {\n    return new Promise(function (resolve, _) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        return resolve(reader.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n  });\n  return _blobToBase.apply(this, arguments);\n}\n;\nexport var ChangeAvatar = function () {\n  var _ref10 = _asyncToGenerator(function* (newAvatarNum) {\n    var request_url = API_BASE_URL + '/User/avatar?avatarNumber=' + newAvatarNum;\n    var key = yield GetJWTKey();\n    if (key == null || key.length == 0) return {\n      success: false,\n      message: \"Not logged in!\"\n    };\n    var headers = {\n      'Authorization': 'Bearer ' + key\n    };\n    var result = yield SendRequest(request_url, 'POST', headers, {});\n    return result;\n  });\n  return function ChangeAvatar(_x16) {\n    return _ref10.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["SetLoggedIn","GetJWTKey","API_BASE_URL","SendRequest","_ref","_asyncToGenerator","url","method","headers","body","onSuccessMessage","arguments","length","undefined","response","fetch","_objectSpread","catch","error","console","message","success","statusCode","status","ok","json","responseBody","result","_x","_x2","_x3","_x4","apply","Register","_ref2","userName","password","mail","request_url","data","JSON","stringify","username","_x5","_x6","_x7","Login","_ref3","_x8","_x9","PasswordResetRequest","_ref4","Mail","_x10","PasswordResetSubmit","_ref5","code","newPassword","Code","NewPassword","_x11","_x12","GetUserData","_ref6","key","ScanCode","_ref7","_x13","GetQuests","_ref8","GenerateQRCode","_ref9","questId","blob","base64","blobToBase64","image","_x14","_x15","_blobToBase","Promise","resolve","_","reader","FileReader","onloadend","readAsDataURL","ChangeAvatar","_ref10","newAvatarNum","_x16"],"sources":["C:/Workspace/Programming/Mobile/hiscoreapp/HI-SCORE/shared/CompanionAPI.js"],"sourcesContent":["import { SetLoggedIn, GetJWTKey } from './GlobalStorage.js'\r\n\r\nconst API_BASE_URL = 'https://continue.sodacookie.net';\r\n\r\nconst SendRequest = async (url, method, headers, body, onSuccessMessage = \"Action successful\") => {\r\n\r\n  const response = await fetch(url, {\r\n    method: method,\r\n    headers: {\r\n      ...headers,\r\n      'Accept': 'application/json'\r\n    },\r\n    body: body,\r\n  }).catch(error => {\r\n    console.error(error);\r\n    return {message: error, success: false, statusCode: 400};\r\n  });\r\n\r\n  let statusCode = response.status;\r\n  \r\n  if(statusCode == 502 || statusCode == 503 || statusCode == 404){\r\n    console.error(\"UNABLE TO CONNECT TO API\");\r\n    return {message: \"Could not connect to companion API Server\", success: false, statusCode: statusCode};\r\n  }\r\n\r\n  if(statusCode == 401){\r\n    //console.error(\"UNAUTHORIZED\");\r\n    return {message: \"Invalid authorization\", success: false, statusCode: statusCode};\r\n  }\r\n\r\n  if(!response.ok){\r\n    let error = await response.json();\r\n    //console.log(\"Request Error response: \");\r\n    //console.log(error);\r\n    return {message: error, success: false, statusCode: statusCode};\r\n  }\r\n\r\n\r\n\r\n  let responseBody = await response.json();\r\n  //console.log(\"Request Response Body: \");\r\n  //console.log(responseBody);\r\n  let result = {\r\n    success: true,\r\n    message: onSuccessMessage,\r\n    response: responseBody,\r\n    statusCode: statusCode\r\n  };\r\n  return result;\r\n}\r\n\r\nexport const Register = async (userName, password, mail) => {\r\n\r\n  const request_url = API_BASE_URL+'/Login/register';\r\n\r\n  let data = JSON.stringify({\r\n      username: userName,\r\n      password: password,\r\n      mail: mail\r\n    });\r\n\r\n  let result = await SendRequest(request_url, 'POST', {'Content-Type': 'application/json'}, data, \"Account was registered!\");\r\n\r\n  return result;\r\n};\r\n\r\nexport const Login = async (userName, password) => {\r\n  const request_url = API_BASE_URL+'/Login/login';\r\n\r\n  let data = JSON.stringify({\r\n      username: userName,\r\n      password: password\r\n    });\r\n\r\n  let result = await SendRequest(request_url, 'POST', {'Content-Type': 'application/json'}, data, \"\");\r\n\r\n  if(result.success)\r\n    await SetLoggedIn(result.response);\r\n\r\n  return result;\r\n};\r\n\r\nexport const PasswordResetRequest = async (mail) => {\r\n  const request_url = API_BASE_URL+'/PasswordReset/request';\r\n\r\n  let data = JSON.stringify({\r\n    Mail: mail,\r\n  });\r\n\r\n  let result = await SendRequest(request_url, 'POST', {'Content-Type': 'application/json'}, data, \"Password reset mail sent.\");\r\n  return result;\r\n};\r\n\r\nexport const PasswordResetSubmit = async (code, newPassword) => {\r\n  const request_url = API_BASE_URL+'/PasswordReset/submit';\r\n\r\n  let data = JSON.stringify({\r\n    Code: code,\r\n    NewPassword: newPassword\r\n  });\r\n\r\n  let result = await SendRequest(request_url, 'POST', {'Content-Type': 'application/json'}, data,  \"Password was changed.\");\r\n  return result;\r\n};\r\n\r\n\r\n\r\nexport const GetUserData = async () => {\r\n  const request_url = API_BASE_URL+'/User';\r\n\r\n  let key = await GetJWTKey();\r\n  if(key == null || key.length == 0)\r\n    return {success: false, message: \"Not logged in!\"};\r\n\r\n  let headers = {'Authorization': 'Bearer '+key};\r\n  var result = await SendRequest(request_url, 'GET', headers, null);\r\n  return result;\r\n};\r\n\r\nexport const ScanCode = async (code) => {\r\n  const request_url = API_BASE_URL+'/Quest';\r\n\r\n  let data = JSON.stringify({\r\n    code: code,\r\n  });\r\n\r\n  let key = await GetJWTKey();\r\n  if(key == null || key.length == 0)\r\n    return {success: false, message: \"Not logged in!\"};\r\n\r\n  let headers = {'Authorization': 'Bearer '+key};\r\n\r\n  let result = await SendRequest(request_url, 'POST', {...headers, 'Content-Type': 'application/json'}, data,  \"Quest completed!\");\r\n  return result;\r\n};\r\n\r\nexport const GetQuests = async () => {\r\n  const request_url = API_BASE_URL+'/Quest/questlist';\r\n\r\n  let key = await GetJWTKey();\r\n  if(key == null || key.length == 0)\r\n    return {success: false, message: \"Not logged in!\"};\r\n\r\n  let headers = {'Authorization': 'Bearer '+key};\r\n  var result = await SendRequest(request_url, 'GET', headers, null);\r\n  return result;\r\n};\r\n\r\nexport const GenerateQRCode = async (questId) => {\r\n  const request_url = API_BASE_URL+'/Quest/qrcode?id=' + questId;\r\n\r\n  let key = await GetJWTKey();\r\n  if(key == null || key.length == 0)\r\n    return {success: false, message: \"Not logged in!\"};\r\n\r\n  let headers = {'Authorization': 'Bearer '+key};\r\n\r\n  const response = await fetch(request_url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      ...headers,\r\n      'Accept': 'image/png'\r\n    },\r\n    body: null,\r\n  })\r\n  .catch(error => {\r\n    console.error(error);\r\n    return {message: error, success: false};\r\n  });\r\n\r\n  let blob = await response.blob();\r\n  var base64 = await blobToBase64(blob);\r\n\r\n\r\n  return {message: 'QR Code generated successfully', success: true, image: base64};\r\n};\r\n\r\nasync function blobToBase64(blob) {\r\n  return new Promise((resolve, _) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => resolve(reader.result);\r\n    reader.readAsDataURL(blob);\r\n  });\r\n};\r\n\r\n\r\nexport const ChangeAvatar = async (newAvatarNum) => {\r\n  const request_url = API_BASE_URL+'/User/avatar?avatarNumber=' + newAvatarNum;\r\n\r\n  let key = await GetJWTKey();\r\n  if(key == null || key.length == 0)\r\n    return {success: false, message: \"Not logged in!\"};\r\n\r\n  let headers = {'Authorization': 'Bearer '+key};\r\n  var result = await SendRequest(request_url, 'POST', headers, {});\r\n  return result;\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}